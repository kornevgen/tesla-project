цель статьи: предложить аудитории алгоритм генерации тестовых программ по шаблонам с учетом кэширования

тестовый шаблон (трансляции адресов сейчас нет, косвенных обращений нет):
LW x, y, z @ noexc(l1Hit) --> noexc.tsl: LoadMemory(a,c);
ADD u, y, x

- это лишь упрощенная модель работы с памятью (не хватает трансляции адресов)
- какие предложены решения, чем они плохи в данном случае

- устройство кэша (адрес делится на тег, сет и индекс)
- кэширующий механизм работы с памятью
- тестовые шаблоны и инструкции в них (LOAD, STORE - l1Hit, для остальных тесла-описание)
(показать картинкой, как важно знать, что инструкции работают с одним сетом)
- в предположении, что везде один сет: перевод каждой тестовой ситуации в систему уравнений
- как распределять по сетам
- ограничения на считанные и записываемые значения при одинаковых адресах