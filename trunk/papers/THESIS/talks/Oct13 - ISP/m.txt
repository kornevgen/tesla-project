производится тестирование модели микропроцессора (RTL) и тестирование симулятора микропроцессора (тоже машинными программами)

программы должны быть разнообразными - какую-то часть получить просто, а остальное получить сложно

для построения различных тестовых программ нужна особая квалификация (инженеры не могут этого делать)

тестируются сложные механизмы, поэтому программ нужно много/программы сложные

не просто количество растет, но и сложность растет с увеличением необходимой длины программы, поскольку растет количество внутренних зависимостей, отношений мультипликативным образом -- уже на программах из 3-4 инструкций бывает нетривиально догадаться, какие надо выбрать адреса в инструкциях


1. Системное тестирование микропроцессоров (core-level testing) состоит в проверке работы микропроцессора на заранее подготовленных или сгенерированных машинных (тестовых) программах.
<Такие программы загружаются в память микропроцессора, исполняются, процесс исполнения протоколируется и затем анализируется. На основании этого принимается решение о корректности поведения модели микропроцессора.>

1а. В силу простоты проведения тестирование машинными программами осуществляется практически всеми командами разработки микропроцессоров.

2. Системные тесты проверяют микропроцессор в целом, поэтому
	* размер набора таких тестов может оказаться чрезвычайно большим.

3. Важной задачей является генерация тестов, направленных на [проверку отдельных механизмов] микропроцессора, особенно, если реализация таких механизмов является сложной и поэтому с большой вероятностью может содержать ошибки.
[Целенаправленная генерация уже применяется для тестирования конвейеров микропроцессоров, ... ]

4. Такая целенаправленная генерация позволяет одновременно
	* сократить размеры тестового набора и
	* повысить качество тестирования сложных механизмов.

5. К числу таких сложных механизмов относится
	* механизм управления памяти (memory management unit - MMU), который отвечает за организацию виртуальной памяти и кэширование данных основной памяти.

часто на практике применяются не слишком надежные, но достаточно дешевые техники, такие как случайное тестирование или тестирование на ограниченном наборе программ, проверяющие лишь наиболее простые ситуации. Возможно, наличие недорогих и простых методик, а также возможность проверить «реальную» работу микропроцессора — это основные причины, по которым тестирование стало самым распространенным на практике методом верификации.

Далеко не всегда случайный тест хорошо проверяет. Так, с его помощью практически невозможно проверить, как работает нормализатор результата устройства, складывающего числа с плавающей запятой. Ведь для его проверки нужно, чтобы порядки слагаемых были одинаковые, знаки чисел были разные, и совпало некоторое количество старших разрядов мантисс. В этом случае при сложении мантисс в старших разрядах суммы получатся нули, то есть, ситуация,требующая работы нормализатора. В случайном тесте выполнение перечисленных выше условий очень маловероятно. Например, для формата double extended, используемого в микропроцессорах Pentium, вероятность того, что при случайных операндах сумма мантисс будет иметь 10 нулей в старших разрядах, ~10^(-8).


